generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
  
  @@index([shop])
  @@index([expires])
}

model Customer {
  id                String      @id @default(uuid())
  shopDomain        String      
  shopifyCustomerId String      
  email             String
  storeCredit       Float       @default(0)
  totalEarned       Float       @default(0)
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  
  transactions      CashbackTransaction[]
  membershipHistory CustomerMembership[]
  
  @@unique([shopDomain, shopifyCustomerId])
  @@index([shopDomain])
  @@index([email])
}

model CashbackTransaction {
  id                    String      @id @default(uuid())
  shopDomain            String      
  customerId            String
  shopifyOrderId        String      
  orderAmount           Float
  cashbackAmount        Float
  cashbackPercent       Float
  status                TransactionStatus @default(COMPLETED)
  shopifyTransactionId  String?     
  createdAt             DateTime    @default(now())
  
  customer              Customer    @relation(fields: [customerId], references: [id])
  
  @@unique([shopDomain, shopifyOrderId])
  @@index([shopDomain])
  @@index([customerId])
  @@index([createdAt])
}

model Tier {
  id                String              @id @default(uuid())
  shopDomain        String      
  name              String      
  minSpend          Float?      
  cashbackPercent   Float       
  evaluationPeriod  EvaluationPeriod    @default(ANNUAL)
  isActive          Boolean             @default(true)
  createdAt         DateTime            @default(now())
  
  customerMemberships CustomerMembership[]
  
  @@unique([shopDomain, name])
  @@index([shopDomain])
  @@index([cashbackPercent])
}

model CustomerMembership {
  id                String      @id @default(uuid())
  customerId        String
  tierId            String
  startDate         DateTime    @default(now())
  isActive          Boolean     @default(true)
  createdAt         DateTime    @default(now())
  
  customer          Customer    @relation(fields: [customerId], references: [id])
  tier              Tier        @relation(fields: [tierId], references: [id])
  
  @@unique([customerId, isActive])
  @@index([customerId])
  @@index([tierId])
}

enum TransactionStatus {
  COMPLETED
  SYNCED_TO_SHOPIFY
  SHOPIFY_SYNC_FAILED
}

enum EvaluationPeriod {
  ANNUAL         // 12 months rolling (default)
  LIFETIME       // All-time spending, never expires
}